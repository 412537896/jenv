import org.apache.tools.ant.filters.ReplaceTokens

apply plugin: 'groovy'
apply plugin: 'idea'

defaultTasks 'clean', 'prepareResources', 'prepareCommands', 'prepareJenvCommands', 'assembleArchive'

ext.installDir = "${System.getProperty('user.home')}/.jenv"

loadConfiguration()

repositories {
  mavenCentral()
}

configurations {
  sshAntTask
}

dependencies {
  groovy group: 'org.codehaus.groovy', name: 'groovy', version: '2.0.8'
  groovy group: 'org.apache.ant', name: 'ant', version: '1.9.0'
}

@SuppressWarnings("GroovyAssignabilityCheck")
def loadConfiguration() {
  def environment = hasProperty('env') ? env : 'dev'
  ext.environment = environment
  println "Environment is set to: $environment"

  def configFile = file('config.groovy')
  def config = new ConfigSlurper(environment).parse(configFile.toURL())
  ext.config = config
}

task prepareResources(type: Copy) {
  from 'src/main/resources'
  into 'build/jenv'
  include '**/*'
  filter(ReplaceTokens, tokens: [JENV_VERSION: config.jenvVersion, JENV_SERVICE: config.jenvService])
}

task prepareCommands(type: Copy) {
  from 'src/main/scripts/bin'
  into 'build/jenv/bin'
  filter(ReplaceTokens, tokens: [JENV_VERSION: config.jenvVersion, JENV_SERVICE: config.jenvService])
}

task prepareJenvCommands(type: Copy, dependsOn: [prepareResources, prepareCommands]) {
  from 'src/main/scripts/commands'
  into 'build/jenv/commands'
  filter(ReplaceTokens, tokens: [JENV_VERSION: config.jenvVersion, JENV_SERVICE: config.jenvService])
}

task assembleArchive(type: Zip, dependsOn: [prepareJenvCommands]) {
  classifier = config.jenvVersion
  from "build/jenv"
  include "**/*"
}
